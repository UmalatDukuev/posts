type User {
    id: ID!
    username: String!
    email: String
}

type Post {
    id: ID!
    title: String!
    content: String!
    authorId: ID!
    allowComments: Boolean!
    comments(limit: Int = 10, offset: Int = 0): [Comment]
}

type Comment {
    id: ID!
    content: String!
    author: User!
    postId: ID!
    parentCommentId: ID
    createdAt: String!
    replies(limit: Int = 10, offset: Int = 0): [Comment]
}

type Query {
    posts(limit: Int = 10, offset: Int = 0): [Post]
    post(id: ID!): Post
    comments(postId: ID!, limit: Int = 10, offset: Int = 0): [Comment]
}

input CreatePostInput {
    title: String!
    content: String!
    authorId: ID!
    allowComments: Boolean!
}

input CreateCommentInput {
    content: String!
    authorId: ID!
    postId: ID!
    parentCommentId: ID
}

type Mutation {
    createPost(input: CreatePostInput!): PostStatus
    updatePost(id: ID!, allowComments: Boolean): PostStatus 
    deletePost(id: ID!): DeleteStatus

    addComment(input: CreateCommentInput!): CommentStatus
    deleteComment(id: ID!): DeleteStatus
}

type PostStatus {
    isError: Boolean!
    message: String
    post: Post
}

type CommentStatus {
    isError: Boolean!
    message: String
    comment: Comment
}

type DeleteStatus {
    isError: Boolean!
    message: String
}

type Subscription {
    commentAdded(postId: ID!): Comment
}
